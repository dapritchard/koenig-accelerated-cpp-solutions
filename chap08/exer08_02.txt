Implement the following library algorithms, which we used in Chapter 6 and
described in section 6.5 page 121.  Specify what kinds of iterators they
require.  Try to minimize the number of distinct iterator operations that each
function requires.

    equal(b, e, d)                search(b, e, b2, e2)
    find(b, e, t)                 find_if(b, e, p)
    copy(b, e, d)                 remove_copy(b, e, d, t)
    remove_copy_if(b, e, d, p)    remove(b, e, t)
    transform(b, e, d, f)         partition(b, e, p)
    accumulate(b, e, t)

--------------------------------------------------------------------------------

The library algorithms are implemented in lib_algs.h.  Each algorithm has a
corresponding suite of unit tests, which are all ran by the executable created
from the utest_lib_algs.cpp file.
